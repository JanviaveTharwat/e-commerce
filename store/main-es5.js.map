{"version":3,"sources":["webpack:///src/app/service/cart.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/product-items/product-items.component.ts","webpack:///src/app/components/product-items/product-items.component.html","webpack:///src/app/components/confirmation/confirmation.component.ts","webpack:///src/app/components/confirmation/confirmation.component.html","webpack:///src/app/components/product-item-details/product-item-details.component.ts","webpack:///src/app/components/product-item-details/product-item-details.component.html","webpack:///src/app/components/cart/cart.component.ts","webpack:///src/app/components/cart/cart.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/product-list/product-list.component.ts","webpack:///src/app/components/product-list/product-list.component.html","webpack:///src/app/components/order-list/order-list.component.ts","webpack:///src/app/components/order-list/order-list.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/from/from.component.ts","webpack:///src/app/components/from/from.component.html","webpack:///src/app/service/product.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CartService","items","products","totalPrice","order","fullName","product","quantity","x","findIndex","p","id","totalPayment","price","productInCart","name","url","push","updateCartTotal","productID","splice","productX","forEach","providedIn","environment","production","ProductItemsComponent","selector","templateUrl","styleUrls","productItem","ConfirmationComponent","serviceC","getOrder","ProductItemDetailsComponent","linking","service","params","subscribe","loadProduct","res","filterProduct","filter","parseInt","description","CartComponent","cartService","item","getCart","updateCart","removeProduct","createOrder","navigate","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","ProductListComponent","Service","OrderListComponent","setQuantity","addToCart","alert","$event","preventDefault","NavBarComponent","FromComponent","email","number","creditcard","adress","submitOrder","emit","submit","ProductService","http","get","routes","path","component","AppRoutingModule","forRoot","exports","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { OrderModule } from '../models/order/order.module';\nimport{ cart} from '../models/cart/cart.module';\nimport { ProductModule } from '../models/product/product.module';\n\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  \n  items:cart={\n    products:[],\n    totalPrice :0\n  };\n  order:OrderModule={\n    fullName :'',\n    totalPrice :0\n  };\n  \n\n  constructor() { }\ngetCart(){\n  return this.items\n}\naddToCart(product: ProductModule,quantity:number){\n\n  \n  const x = this.items.products.findIndex((p)=>p.id=== product.id)\n  const totalPayment =product.price*quantity\n  if (x >=0){\n    this.items.products[x].totalPrice +=totalPayment\n    this.items.products[x].quantity += quantity\n  }else{\n    let productInCart={\n      id:product.id,\n      name :product.name,\n      url : product.url,\n      price: product.price,\n      totalPrice:totalPayment,\n      quantity\n\n    }\n  \n  this.items.products.push(productInCart)\n}\nthis.updateCartTotal()\n}\nremoveProduct(productID:number){\n  const x = this.items.products.findIndex(product => product.id === productID)\n  this.items.products.splice(x,1);\n  this.updateCartTotal()\n}\nupdateCart(productID:number , quantity:number){\n  let productX = this.items.products.findIndex(p => p.id===productID)\n  if (productX >= 0){\n    this.items.products[productX].totalPrice=this.items.products[productX].price*quantity\n    this.items.products[productX].quantity=quantity\n  }\n  this.updateCartTotal()\n}\nupdateCartTotal():void{\n  this.items.totalPrice=0\n  this.items.products.forEach(product => this.items.totalPrice+= product.totalPrice)\n}\ncreateOrder(fullName:string){\n  this.order={\n    fullName,\n    totalPrice: this.items.totalPrice\n  }\n}\n\ngetOrder():OrderModule{\n  return this.order\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit,\n  //using input to comunicate btween a child and its parent \n  Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-product-items',\n  templateUrl: './product-items.component.html',\n  styleUrls: ['./product-items.component.css']\n})\nexport class ProductItemsComponent implements OnInit {\n@Input() productItem: any;\n  constructor( ) { }\n\n  ngOnInit(): void {\n  }\n\n }\n\n\n\n\n","<div class='productcontainer'>\n  <!--getting product by its id-->\n    <a routerLink='/product-detail/{{productItem.id}}'\n    routerLinkActive='active'>\n    <!--adding its image by featching its data-->\n    \n    <img  class='productimage' \n    src=\"{{productItem.url}}\"\n    alt=\"{{productItem.name}}\">\n  </a>\n <div class=\"detailitem\">\n  <!--adding product details by fetching its data -->\n  <li><h2>name:{{productItem.name}}</h2></li>\n  <li>price: {{productItem.price}} $</li> \n  <!--to get more details about this product we linked the product details page\n     by this product id in a button (more details) \n  -->\n  <a routerLink='/product-detail/{{productItem.id}}'\n  routerLinkActive='active'>\n  <button>more details</button>\n</a>\n</div>\n<!--calling order list to fech data and send to it-->\n<app-order-list [product]=\"productItem\"></app-order-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport{CartService}from'../../service/cart.service';\nimport { OrderModule } from 'src/app/models/order/order.module';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.css']\n})\nexport class ConfirmationComponent implements OnInit {\n  order:OrderModule={\n    fullName:'',\n    totalPrice:0\n  }\n\n  constructor(private serviceC :CartService) { }\n\n  ngOnInit(): void {\n    this.order=this.serviceC.getOrder()\n  }\n\n}\n","<div class=\"confirmation-container\">\n    <div class=\"confirmation-items \">\n        <div class=\"confirmation-header\">\n            SUCCESS\n        </div>\n        <div class=\"confirmation-item\">Thank you, <b>{{ order.fullName }}</b></div>\n        <div class=\"confirmation-item\">Your <b>${{ order.totalPrice }}</b> order is confirmed!</div>\n        <div class=\"confirmation-item\">Please allow 1-3 business day(s) for shipping</div>\n        <div class=\"confirmation-item\">\n                <a routerLink=\"/\">\n                    Return to product list\n                </a>\n            </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n//import product service and product module also import active route to send data and recive data by routing\nimport { ProductModule } from 'src/app/models/product/product.module';\nimport { ProductService } from 'src/app/service/product.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-product-item-details',\n  templateUrl: './product-item-details.component.html',\n  styleUrls: ['./product-item-details.component.css']\n})\nexport class ProductItemDetailsComponent implements OnInit {\n  //giving product module array name of productItem \n  productItem :ProductModule[]=[];\n  product:ProductModule |null =null;\n//injecting activeRouting and product service\n  constructor(\n    private linking :ActivatedRoute,\n    private service :ProductService) { \n      this.linking.params.subscribe(params=>{\n        //loadProduct is a function from product service that fech data from data.json file \n        this.service.loadProduct().subscribe(res =>{\n          this.productItem= res\n          //feltering products by id to get them to appear  on ui \n          this.product = this.filterProduct((params['id']))\n\n      });\n      \n    });\n  }\n\n  ngOnInit(): void {\n  }\n  //fiktering product by its id from module and the data got from loadinproduct function and compare btween them \n  filterProduct(id:string):ProductModule{\n    return this.productItem.filter(product=>product.id===parseInt(id))[0]\n  }\n}\n\n\n","<!--adding go to cart button in case navigation isnt working-->\n<a routerLink='/cart' routerLinkActive=\"active\"><button>go to cart</button></a>\n<div class=\"detail-container\" >\n    <!--adding image  an details of every product\n         by using {{}}and mentioning proudct and fetching fromdata.jaon \n         and filtering it from product module-->\n    <img src=\"{{product?.url}}\"\n    alt=\"{{product?.name}}\">\n    <span class=\"detail-item\">\n        <ul>\n            <li>name:<h3>{{product?.name}}</h3></li>\n            <li>description:{{product?.description}}\n            </li>\n            <li>price:{{product?.price}} $</li>\n        </ul>\n        \n    </span>\n\n    <!--adding back button to go back to product list(main page)-->\n    <a routerLink=\"/\" routerLinkActive=\"active\">\n        <button class=\"back-link\"> go back</button>\n    </a>\n    </div>\n    ","import { Component, OnInit } from '@angular/core';\n//importing cart service and module\nimport { CartService } from '../../service/cart.service';\nimport { cart} from 'src/app/models/cart/cart.module';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\nitem: cart={\n  products: [],\n  totalPrice: 0,\n};\n//inject cart service\n  constructor( private cartService:CartService ,\n    private linking :Router) { }\n\n  ngOnInit(): void {\n    //allow get cart fubction to do its job\n    this.item = this.cartService.getCart()\n  }\n  //changing quantities of each product  and updating the cart \n  changeQuantity(id:number,quantity:number):void{\n    this.cartService.updateCart(id,quantity)\n  }\n  //removing product /s\n  removeProduct (productID :number):void{\n    this.cartService.removeProduct(productID)\n  }\n  //creating an order by products and form \n  createOrder(fullName :string):void{\n    this.cartService.createOrder(fullName)\n    this.linking.navigate(['/confirming'])\n  }\n}\n\n\n","<!--back to product list button in case navigation(nav bar) isnt working-->\n\n<a routerLink=\"/\"routerLinkActive=\"active\">\n    <button>back to products</button></a>\n    <!--message in case this cart is empty-->\n<div class=\"empty-cart-message\" *ngIf=\"item.products.length===0\">\n    No items here please add item go back to  \n    <a routerLink=\"/\" routerLinkActive=\"active\">\n        product list </a> and add some\n     </div>\n <!--cart has products -->       \n<div class=\"cart-container\">Cart</div>\n<!--cart products list-->\n<div class=\"cart-item\" *ngFor=\"let product of item.products\">\n    <!--loading image and details of each product -->\n    <img src=\"{{product.url}}\"\n    alt=\"{{product.name}}\"><div>\n<ul class=\"cart-item-details \">\nname:{{product.name}}\n<br>\n price:{{(product.price).toFixed(1)}} $\n <br>\n <!--user add product quantity-->\n<label for=\"cart-{{product.name}}\">Quantity</label>\n<input \nclass='number-input 'type=\"number\" min='1' id='cart-{{product.name}}'\n[(ngModel)]=\"product.quantity\"(ngModelChange)=\"changeQuantity(product.id,$event)\">\n\n<!--buttion to remove product-->\n <button (click)=\"removeProduct(product.id)\">Remove this</button> \n           \n</ul>\n\n<!--calculating total price-->\n<h3>Total :{{(item.totalPrice).toFixed(1)}} $</h3>\n\n</div>\n\n</div>\n<!-- getting form -->\n<app-from  class='form-margin' (submitOrder)=\"createOrder($event)\"></app-from>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'store';\n}\n","<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductItemsComponent } from './components/product-items/product-items.component';\nimport { ProductItemDetailsComponent } from './components/product-item-details/product-item-details.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { CartComponent } from './components/cart/cart.component';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { FromComponent } from './components/from/from.component';\nimport { ConfirmationComponent } from './components/confirmation/confirmation.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductListComponent,\n    ProductItemsComponent,\n    ProductItemDetailsComponent,\n    NavBarComponent,\n    CartComponent,\n    OrderListComponent,\n    FromComponent,\n    ConfirmationComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n//import sevice and module of product \nimport {ProductModule} from'../../models/product/product.module';\nimport { ProductService } from 'src/app/service/product.service';\n\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n//naming  product module array with a more meaningfull for its job in this part of the app\n productItem :ProductModule[]=[];\n//injecting product service dependency and re name it in perpose of essay usage\nconstructor(private Service : ProductService ) { }\n\n\nngOnInit(): void {\n  //loading all products data  for product page \n  this.Service.loadProduct().subscribe((res: ProductModule[])=>{\n    this.productItem= res;\n  })\n}\n}\n  \n","<!--adding go to cart button in case navigation isnt working-->\n<a routerLink='/cart' routerLinkActive=\"active\"><button>go to cart</button></a>\n<div class='productcontainer'>\n<!-- calling the product items to be seen over prroduct page\n    ussing one way bindung data -->\n    <app-product-items  class=\"productindex\"\n     *ngFor=\"let product of productItem\"\n    [productItem]=\"product\"></app-product-items>\n\n    \n</div>\n    \n   \n","import { Component, OnInit ,\n  //sebding data to child component\n  Input } from '@angular/core';\n  //import product module and cart service\nimport { ProductModule } from 'src/app/models/product/product.module';\nimport { CartService } from 'src/app/service/cart.service';\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit {\n  @Input() product: any;\n//set a fixed quantiy number to biggin with\n  setQuantity :number =1;\n//injecting cart servise\n  constructor(private serviceC :CartService) { }\n\n  ngOnInit(): void {\n  }\n  //this is a function that connect cart and product list \naddToCart(product:ProductModule){\n  this.serviceC.addToCart(product ,this.setQuantity)\n  {\n    //alerting the user that this product is added to his cart\n  alert(`${this.setQuantity} of ${product.name} product/s is added to your cart`)\n}\n}  \n}\n","<form>\n    <select name=\"quantity\" id=\"product\"[(ngModel)]='setQuantity'>\n        <option [value]=\"1\">1</option>\n        <option [value]=\"2\">2</option>\n        <option [value]=\"3\">3</option>\n        <option [value]=\"4\">4</option>\n        <option [value]=\"5\">5</option>\n    </select>\n    \n    <button (click)=\"addToCart(product);$event.preventDefault()\">Add to cart</button>\n    </form>\n    ","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header\">\n    <h1 class='title' >MY store</h1>\n    <!--to navigate btween pages-->\n    \n    <ul class=\"nav\">\n    <a routerLink=\"/\" routerLinkActive=\"active\">product</a>\n    \n   <a routerLink=\"/cart\" routerLinkActive=\"active\">cart</a>\n</ul>\n</div>\n","import { Component, OnInit,\n  //sending data to parent\n  Output,EventEmitter } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-from',\n  templateUrl: './from.component.html',\n  styleUrls: ['./from.component.css']\n})\nexport class FromComponent implements OnInit {\n  fullName : string ='';\n  email : string ='';\n  number :number =0 ;\n  creditcard: string ='' ;\n  adress: string='';\n  //making parent and child conunicate by eventEmitter function\n@Output() submitOrder:EventEmitter<string>=new EventEmitter();\n//injecting router\n  constructor() {} \n   \n  ngOnInit(): void {\n  }\n\nsubmit( ):void{\n  \n  this.submitOrder.emit(this.fullName);\n\n}\n}\n","<form  #f=\"ngForm\"  \n(ngSubmit)=\"submit()\">\n    <h1> Checkout </h1>\n    <label for=\"fullName\">Full Name: </label>\n    <input \n    id='fullName'\n    type='text'\n    name=\"fullName\"  \n    required \n    minlength=\"9\" \n    placeholder=\"Enter First Name\" \n    [(ngModel)]=\"fullName\">\n    <br>\n\n    \n    <label for='email'>email</label>\n    <input \n    id=\"emai\"\n    name=\"email\" \n    type='text' \n    required \n    placeholder ='example@email.com' \n    [(ngModel)]=\"email\">\n    <br>\n\n    <label for=\"number\">Number:</label>\n    <input \n    id=\"number\" \n    type='number'\n    name=\"number\" \n    requierd \n    placeholder=\"01234****\" \n    minlebght='7'\n     maxlenght=\"11\"\n     [(ngModel)]=\"number\">\n     <br>\n\n    <label for=\"adress\">Address: </label>\n    <input \n    id='adress' \n    type='text'\n    name=\"adress\"  \n    required  \n    minlength=\"10\" \n    placeholder=\"Enter Address\" \n    [(ngModel)]=\"adress\">\n    <br>\n    <label for='creditcard'>Credit Card : </label>\n    <input \n    id='cerditcard'\n    type='text'\n    name=\"cerditcard\"  \n    required \n    minlength=\"16\"\n    maxlength=\"16\" \n    placeholder=\"(16-digit number)\" \n    [(ngModel)]=\"creditcard\">\n    <br>\n   \n    <button type='submit'[disabled]=\"f.invalid\"  value=\"Submit\" > submit </button>\n  </form>\n","import { Injectable } from '@angular/core';\nimport {Observable } from'rxjs';\nimport {ProductModule } from '../models/product/product.module';\nimport { HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ProductService {\n  \n \n  constructor(private http : HttpClient) { }\n  loadProduct():Observable<ProductModule[]>{\n    return this.http.get<ProductModule[]>\n    ('/assets/data.json')\n  }\n    \n    }\n      \n       \n      \n    \n    \n      \n    \n  \n  \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport{ ProductListComponent} from'./components/product-list/product-list.component';\nimport { ProductItemDetailsComponent } from './components/product-item-details/product-item-details.component';\nimport{CartComponent} from './components/cart/cart.component';\nimport{OrderListComponent} from './components/order-list/order-list.component';\nimport{ConfirmationComponent} from './components/confirmation/confirmation.component';\n\nconst routes: Routes = [\n  \n  {path:\"product-detail/:id\",component:ProductItemDetailsComponent},\n  {path:'cart',component:CartComponent},\n  {path:'confirming',component:ConfirmationComponent},\n  {path:'order',component:OrderListComponent},\n  {path:'',component:ProductListComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}